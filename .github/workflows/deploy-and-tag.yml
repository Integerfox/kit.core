name: CI/CD Pipeline
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # Run all build workflows in parallel
  build-linux-gcc:
    name: Build Linux GCC
    uses: ./.github/workflows/build-linux-gcc-host.yml
    with:
      event_name: ${{ github.event_name }}
      run_number: ${{ github.run_number }}
      ref_name: ${{ github.ref_name }}

  build-windows-msvc:
    name: Build Windows MSVC
    uses: ./.github/workflows/build-windows-msvc.yml
    with:
      event_name: ${{ github.event_name }}
      run_number: ${{ github.run_number }}
      ref_name: ${{ github.ref_name }}

  build-windows-clang:
    name: Build Windows Clang
    uses: ./.github/workflows/build-windows-clang-host.yml
    with:
      event_name: ${{ github.event_name }}
      run_number: ${{ github.run_number }}
      ref_name: ${{ github.ref_name }}

  build-windows-stm-arm:
    name: Build Windows STM ARM
    uses: ./.github/workflows/build-windows_stm-arm.yml
    with:
      event_name: ${{ github.event_name }}
      run_number: ${{ github.run_number }}
      ref_name: ${{ github.ref_name }}

  build-windows-atmel-arm:
    name: Build Windows Atmel ARM
    uses: ./.github/workflows/build-windows_atmel-arm.yml
    with:
      event_name: ${{ github.event_name }}
      run_number: ${{ github.run_number }}
      ref_name: ${{ github.ref_name }}

  # Deploy only after all builds succeed and only for main branch pushes (not PRs)
  deploy:
    name: Deploy and Tag
    runs-on: ubuntu-latest
    needs: [build-linux-gcc, build-windows-msvc, build-windows-clang, build-windows-stm-arm, build-windows-atmel-arm]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: All builds successful
        run: |
          echo "ðŸŽ‰ All build workflows completed successfully!"
          echo "âœ… Build Linux GCC: Success"
          echo "âœ… Build Windows MSVC: Success" 
          echo "âœ… Build Windows Clang: Success"
          echo "âœ… Build Windows STM ARM: Success"
          echo "âœ… Build Windows Atmel ARM: Success"

      - name: Create Tag
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "<>"
          
          BRANCH_NAME=$(git branch --show-current)
          BRANCH_NAME=$(echo "$BRANCH_NAME" | tr -d '[:punct:]')
          TAG_NAME=$BRANCH_NAME-bld-${{ github.run_number }}
          echo "Creating tag: $TAG_NAME"
          
          git tag "$TAG_NAME" 
          git push origin "$TAG_NAME"

      - name: Deploy artifacts
        run: |
          echo "All builds successful - deploying artifacts..."
          # Add your deployment logic here
          # This could include:
          # - Downloading artifacts from the build workflows
          # - Publishing to package registries
          # - Deploying to servers
          # - Creating releases
          echo "Deployment completed successfully!"
